openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: Restful API for managing users.
servers:
  - url: http://localhost:3000
paths:
  /:
    get:
      summary: Welcome endpoint
      description: Returns a welcome message.
      responses:
        '200':
          description: Welcome message
          content:
            text/plain:
              schema:
                type: string
  /users:
    get:
      summary: Get users with optional filters
      description: Returns a list of users. You can filter users by query parameters (e.g., name, email, age).
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Filter by user name (optional)
        - in: query
          name: email
          schema:
            type: string
          description: Filter by user email (optional)
        - in: query
          name: age
          schema:
            type: string
          description: Filter by user age (optional)
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
  /countusers:
    get:
      summary: Count all users
      description: Returns the total number of users.
      responses:
        '200':
          description: User count
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCount:
                    type: integer
        '500':
          description: Internal server error
  /countwomen:
    get:
      summary: Count women users
      description: Returns the number of women users (users whose name ends with 'a').
      responses:
        '200':
          description: Women user count
          content:
            application/json:
              schema:
                type: object
                properties:
                  womenCount:
                    type: integer
        '500':
          description: Internal server error
  /user:
    get:
      summary: Get user by ID or users by email domain
      description: Returns a user by ID or users by email domain. You must provide either `id` or `domain` as a query parameter.
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: User ID (optional)
        - in: query
          name: domain
          schema:
            type: string
          description: Email domain to filter users (optional)
      responses:
        '200':
          description: User or list of users
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/User'
                  - type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Missing id or domain parameter
        '500':
          description: Internal server error
  /addusers:
    post:
      summary: Add new users
      description: Adds one or more new users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Users created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Failed to add users