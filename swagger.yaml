openapi: 3.0.0
info:
  title: Users API
  version: 1.0.0
  description: A simple API to manage and fetch user data

servers:
  - url: http://localhost:3000
    description: Local dev server

tags:
  - name: Users
    description: Operations related to users
  - name: T-Shirts
    description: Operations related to t-shirts

paths:
  /:
    get:
      summary: Welcome message
      tags:
        - Users
      responses:
        '200':
          description: Welcome message from the API
          content:
            text/plain:
              example: Welcome to the Users API!

  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example:
                - id: 1
                  name: Alice
                  email: alice@example.com
                - id: 2
                  name: Bob
                  email: bob@example.com

  /countusers:
    get:
      summary: Count total users
      tags:
        - Users
      responses:
        '200':
          description: Total number of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  userCount:
                    type: integer
                    example: 20

  /countwomen:
    get:
      summary: Count female users (names ending with 'a')
      tags:
        - Users
      responses:
        '200':
          description: Total number of women
          content:
            application/json:
              schema:
                type: object
                properties:
                  womenCount:
                    type: integer
                    example: 12

  /getuserbyid/{id}:
    get:
      summary: Get user by ID
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user
          schema:
            type: integer
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              example:
                id: 1
                name: Alice
                email: alice@example.com
        '404':
          description: User not found

  /getusersbyemail/{domain}:
    get: 
      summary: Get users by email domain
      tags:
        - Users
      parameters:
        - name: domain
          in: path
          required: true
          description: The email domain to filter users by
          schema:
            type: string
      responses:
        '200':
          description: List of users with the given email domain
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              example:
                - id: 1
                  name: Alice
                  email: alice@example.com
                - id: 3
                  name: Charlie
                  email: charlie@example.com
        '404':
          description: No users found for the given domain

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Alice
        email:
          type: string
          example: alice@example.com

    TshirtRequest:
      type: object
      properties:
        logo:
          type: string
          example: NIKE